name: PYPI Publish
on: push
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      isPublished: ${{ steps.get_infos.outputs.isPublished }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Get infomations for availability
        id: get_infos
        shell: python
        run: |
          import subprocess
          import pathlib
          import urllib.request
          import urllib.error
          import json

          pyproject = pathlib.Path('pyproject.toml').read_text(encoding="utf8")
          pkg_version = pyproject.split("version = ")[1].split("\n")[0].strip('"')
          pkg_name = pyproject.split("name = ")[1].split("\n")[0].strip('"')

          try:
            publish_info = json.load(
              urllib.request.urlopen("https://pypi.org/pypi/"+pkg_name+"/"+pkg_version+"/json")
            )
          except urllib.error.HTTPError:
            publish_info = {"message": "Not Found"}

          if 'message' in publish_info:
            isPublished = False
          else:
            isPublished = True

          subprocess.run('echo "isPublished='+str(isPublished)+'" >> "$GITHUB_OUTPUT"', shell=True)
  publish:
    name: publish
    needs: prepare
    runs-on: ubuntu-latest
    if: needs.prepare.outputs.isPublished == 'False'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Remove ./dist folder
        run: |
          rm -rf ./dist
      - name: Poetry install
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Poetry publish
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish --build
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
